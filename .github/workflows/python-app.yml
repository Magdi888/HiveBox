# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: Python application

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

permissions:
  contents: read

jobs:
  Test:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
    - name: Set up Python 3.12
      uses: actions/setup-python@v3
      with:
        python-version: "3.12"
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8 pytest
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    - name: Test with pytest
      run: |
        pytest

  docker:
    runs-on: ubuntu-latest
    needs: [Test]
    permissions: 
      packages: write
    steps:
    - name: Checkout
      uses: actions/checkout@v4
    - uses: hadolint/hadolint-action@v3.1.0
      with:
        dockerfile: Dockerfile
    - name: set lower case owner name
      id: github-user
      run: |
          echo "OWNER_LC=${OWNER,,}" >>${GITHUB_ENV}
          echo "OWNER_LC=${OWNER,,}" >>${GITHUB_OUTPUT}
      env:
          OWNER: '${{ github.repository_owner }}'

    -
      name: Set up QEMU
      uses: docker/setup-qemu-action@v3
    -
      name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
    -
      name: Login to GitHub Registry
      uses: docker/login-action@v3
      with:
        registry: ghcr.io
        username: ${{ github.repository_owner }}
        password: ${{ secrets.GITHUB_TOKEN }}
    -
      name: Build and push
      uses: docker/build-push-action@v6
      with:
        push: true
        context: .
        tags: ghcr.io/${{ env.OWNER_LC }}/hivebox:${{ github.sha }}   

    - name: Test Endpoint 
      run: |
          docker run -d -p 8000:8000 --name hivebox ghcr.io/${{ env.OWNER_LC }}/hivebox:${{ github.sha }}
          until [ $(curl -s -o /dev/null -w "%{http_code}" http://localhost:8000/version) -eq 200 ]; do
            sleep 5
          done
          response=$(curl -s http://localhost:8000/version)
          if [[ "$response" == '"0.0.1"' ]]; then
            echo "Endpoint is up"
          else
            echo "Endpoint is not up"
            exit 1
          fi
          docker stop hivebox
          docker rm hivebox
